---

- name: Configure node-a
  hosts: node-a.hutter.cloud
  become: true
  become_user: root

  vars:
    # lvm and networking config
    vg: ubuntu-vg
    lv: data
    mountpoint: /data
    netplan: |
      network:
        ethernets:
          eno1:
            dhcp4: false
            addresses:
              - 192.168.30.61/24
              - 192.168.30.253/24
            gateway4: 192.168.30.254
            nameservers:
              addresses:
                - 1.1.1.1
                - 8.8.8.8
        version: 2

    # microk8s configuration (disable dns setup as its the pihole server)
    execute_dns: false
    dns_server: 1.1.1.1

    # ssh key used by jenkins for ssh connection
    jenkins_public_ssh_key: "{{ lookup('ansible.builtin.env', 'JENKINS_SSH_PPUBLIC_KEY') }}"

    # borgmatic alert aws credentials
    borgmatic_sns_topic: "arn:aws:sns:eu-central-1:337261303015:borgmatic"
    borgmatic_sns_region: "eu-central-1"
    borgmatic_aws_access_key_id: "{{ lookup('ansible.builtin.env', 'BORGMATIC_AWS_ACCESS_KEY_ID') }}"
    borgmatic_aws_access_key_secret: "{{ lookup('ansible.builtin.env', 'BORGMATIC_AWS_ACCESS_KEY_SECRET') }}"

    # nfs mounts for borgmatic backup sources
    borgmatic_nfs_enabled: true
    borgmatc_nfs_mounts:
    - name: arspugnandi
      path: /volume1/ars-pugnandi
      server: 192.168.30.33
    - name: katharina
      path: /volume1/homes/katharina
      server: 192.168.30.33
    - name: sebastian
      path: /volume1/homes/sebastian
      server: 192.168.30.33
    - name: ferdi
      path: /volume1/homes/ferdinand
      server: 192.168.30.33
    - name: ebooks
      path: /volume1/ebooks
      server: 192.168.30.17

    # ssh keys for borgmatic backups
    borgmatic_ssh_keys:
    - name: "arspugnandi"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_ARS_PUGNANDI') }}"
    - name: "katharina"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_KATHARINA') }}"
    - name: "node-a"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_NODE_A') }}"
    - name: "sebastian"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_SEBASTIAN') }}"
    - name: "ferdi"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_FERDI') }}"
    - name: "ebooks"
      key: "{{ lookup('ansible.builtin.env', 'BORGBASE_SSH_KEY_EBOOKS') }}"


    # borgmatic backup definitions
    borgmatic_backup_jobs:
      - name: arspugnandi
        username: rofqbj58
        host: rofqbj58.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_ARS_PUGNANDI') }}"
        source_directories:
          - "{{ borgmatic_nfs_root }}/arspugnandi"
        before_backup:
          - "systemctl restart {{ borgmatic_nfs_root[1:] | replace ('/', '-' ) }}-arspugnandi.mount"
        backup_hour: 2
      - name: katharina
        username: zc520i6h
        host: zc520i6h.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_KATHARINA') }}"
        source_directories:
          - "{{ borgmatic_nfs_root }}/katharina"
        before_backup:
          - "systemctl restart {{ borgmatic_nfs_root[1:] | replace ('/', '-' ) }}-katharina.mount"
        backup_hour: 7
      - name: node-a
        username: pi7vk5q8
        host: pi7vk5q8.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_NODE_A') }}"
        source_directories:
          - /data
        backup_hour: 1
        before_backup: []
      - name: sebastian
        username: uvk5c82u
        host: uvk5c82u.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_SEBASTIAN') }}"
        source_directories:
          - "{{ borgmatic_nfs_root }}/sebastian"
        before_backup:
          - "systemctl restart {{ borgmatic_nfs_root[1:] | replace ('/', '-' ) }}-sebastian.mount"
        backup_hour: 5
      - name: ferdi
        username: z9efcw88
        host: z9efcw88.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_FERDI') }}"
        source_directories:
          - "{{ borgmatic_nfs_root }}/ferdi"
        before_backup:
          - "systemctl restart {{ borgmatic_nfs_root[1:] | replace ('/', '-' ) }}-ferdi.mount"
        backup_hour: 9
      - name: ebooks
        username: uf6ql889
        host: uf6ql889.repo.borgbase.com
        passphrase: "{{ lookup('ansible.builtin.env', 'BORGBASE_PASSPHRASE_EBOOKS') }}"
        source_directories:
          - "{{ borgmatic_nfs_root }}/ebooks"
        before_backup:
          - "systemctl restart {{ borgmatic_nfs_root[1:] | replace ('/', '-' ) }}-ebooks.mount"
        backup_hour: 8

  pre_tasks:
  - name: ensure lvm is setup
    community.general.lvol:
      vg: "{{ vg }}"
      lv: "{{ lv }}"
      size: 374.93g #100%FREE only worked once, so lv size is just hardcoded to the available space

  - name: ensure partition is around
    community.general.filesystem:
      fstype: ext4
      dev: "/dev/{{ vg }}/{{ lv }}"

  - name: create mountpoint for data partition
    ansible.builtin.file:
      path: "{{ mountpoint }}"
      state: directory
      mode: 0755

  - name: Mount up device by label
    ansible.posix.mount:
      path: "{{ mountpoint }}"
      src: "/dev/{{ vg }}/{{ lv }}"
      fstype: ext4
      state: mounted

  - name: setup nic with two static ips - required for runnig pihole in k8s
    ansible.builtin.copy:
      content: "{{ netplan }}"
      dest: /etc/netplan/00-installer-config.yaml
      owner: root
      group: root
      mode: '0644'
    register: netplan

  - name: update netplan
    shell: netplan apply
    when: netplan.changed

  roles:
  - role: microk8s
    # set to true for first installation
    # after pihole is up and running manually switch the dns over to 192.168.30.253
    # sudo microk8s disable dns
    # sudo microk8s enable dns:192.168.30.253
    execute_dns: false
    dns_server: 1.1.1.1
    tags:
      - services
      - microk8s
  - role: borgbase
    tags:
      - services
      - borgbase
  - role: jenkins-ssh-access
    tags:
      - jenkins
  - role: 1password-cli
    tags:
      - jenkins
  - role: terraform-cli
    tags:
      - jenkins

